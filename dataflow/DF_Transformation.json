{
	"name": "DF_Transformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DB_Customer",
						"type": "DatasetReference"
					},
					"name": "CustomerTable"
				},
				{
					"dataset": {
						"referenceName": "DB_Transactions",
						"type": "DatasetReference"
					},
					"name": "TransactionTable"
				},
				{
					"dataset": {
						"referenceName": "DB_Products",
						"type": "DatasetReference"
					},
					"name": "ProductTable"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "CTjoinTT"
				},
				{
					"name": "CTjoinTTjoinPT"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          CustomerName as string,",
				"          Email as string,",
				"          Phone as string,",
				"          Address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerTable",
				"source(output(",
				"          id as string,",
				"          TransactionID as string,",
				"          CustomerID as string,",
				"          ProductID as string,",
				"          Quantity as string,",
				"          totalAmount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TransactionTable",
				"source(output(",
				"          Id as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as decimal(38,18),",
				"          Supplier as string,",
				"          Stock as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductTable",
				"CustomerTable, TransactionTable join(CustomerTable@Id == CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> CTjoinTT",
				"CTjoinTT, ProductTable join(ProductID == ProductTable@Id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> CTjoinTTjoinPT"
			]
		}
	}
}